

@mixin font-sizing($size){
	$ratio: $size / $font-size-base;
	$ratio-clamp: clamp($ratio, 1, 2.5);
	font-size: $size;
	line-height: ( $line-height-base - ( $ratio-clamp * .125 ) );
}

@mixin scale-text($minfont,$maxfont,$minscreen,$maxscreen){
	$x1: $minscreen;
	$x2: $maxscreen;
	$y1: $minfont;
	$y2: $maxfont;

	$sizeslope: ($y2 - $y1) / ($x2 - $x1);
	$lineslope: ($line-height-max - $font-size-base-root*$line-height-base) / ($line-height-max - $font-size-base-root);

	$size: calc( (100vw - #{$x1}) * #{$sizeslope} + #{$y1} );

	font-size: $minfont;
	line-height: calc( (#{$minfont} - $font-size-base-root) * #{$lineslope} + $font-size-base-root*$line-height-base );;

	@media ( min-width: $x1 ) and ( max-width: $x2 ) {
		font-size: $size;
		line-height: calc( ( ( (100vw - #{$x1}) * #{$sizeslope} + #{$y1} ) - $font-size-base-root) * #{$lineslope} + $font-size-base-root*$line-height-base );
	}
	@media ( min-width: $x2 ) {
		font-size: $maxfont;
		line-height: calc( (#{$maxfont} - $font-size-base-root) * #{$lineslope} + $font-size-base-root*$line-height-base );
	}
}

@mixin font-size-root(){ @include font-sizing($font-size-root); @include large{ @include font-sizing($font-size-root-full); } }

@mixin font-size-label(){ @include font-sizing($font-size-label); }
@mixin font-size-code(){ @include font-sizing($font-size-code); }
@mixin font-size-small(){ @include font-sizing($font-size-small); }
@mixin font-size-base(){ @include font-sizing($font-size-base); }
@mixin font-size-large(){ @include font-sizing($font-size-large); }

@mixin font-size-larger(){ @include font-sizing($font-size-larger); @include large{ @include font-sizing($font-size-larger-full); } }
@mixin font-size-largest(){ @include font-sizing($font-size-largest); @include large{ @include font-sizing($font-size-largest-full); } }
@mixin font-size-huge(){ @include font-sizing($font-size-huge); @include large{ @include font-sizing($font-size-huge-full); } }
@mixin font-size-huger(){ @include font-sizing($font-size-huger); @include large{ @include font-sizing($font-size-huger-full); } }
@mixin font-size-hugest(){ @include font-sizing($font-size-hugest); @include large{ @include font-sizing($font-size-hugest-full); } }
@mixin font-size-h1(){ @include font-sizing($font-size-h1); @include large{ @include font-sizing($font-size-h1-full); } }
@mixin font-size-h2(){ @include font-sizing($font-size-h2); @include large{ @include font-sizing($font-size-h2-full); } }
@mixin font-size-h3(){ @include font-sizing($font-size-h3); @include large{ @include font-sizing($font-size-h3-full); } }
@mixin font-size-h4(){ @include font-sizing($font-size-h4); @include large{ @include font-sizing($font-size-h4-full); } }
@mixin font-size-h5(){ @include font-sizing($font-size-h5); @include large{ @include font-sizing($font-size-h5-full); } }
@mixin font-size-h6(){ @include font-sizing($font-size-h6); @include large{ @include font-sizing($font-size-h6-full); } }



@function h($from:false, $to:false) {
	@if $from and $to {
		// nothing
	} @else {
		@if $from {
			$to: $from;
		}
	}
	@if $from == false { $from: 1; }
	@if $to == false { $to: 6; }
	@if $from == $to {
		@return 'h#{$from}, .h#{$from}';
	} @else {
		@return 'h#{$from}, .h#{$from},' + h($from+1, $to);
	}
}


@mixin labels($size:small){
	text-transform: uppercase;
	letter-spacing: .15em;
	font-size: $font-size-label;
	font-weight: bold;
}

@mixin active(){
  &:hover, &:focus {
    @content;
  }
}

@mixin stoic(){
	&:hover,
	&:active,
	&:focus { text-decoration: none; }
}

@mixin columns($count:4,$width:100px,$gap:0){
	-webkit-column-count: $count;
	-moz-column-count: $count;
	column-count: $count;
	-webkit-column-gap: $gap;
	-moz-column-gap: $gap;
	column-gap: $gap;
	-webkit-column-width: $width;
	-moz-column-width: $width;
	column-width: $width;
}

@mixin avoid-break {
	-webkit-column-break-inside: avoid;
	page-break-inside: avoid;
	break-inside: avoid-column;
}

@mixin placeholder($color) {
  &::-webkit-input-placeholder { color: $color; font-style: $input-style-placeholder; }
  &:-moz-placeholder { color: $color; font-style: $input-style-placeholder; }
  &::-moz-placeholder { color: $color; font-style: $input-style-placeholder; }
  &:-ms-input-placeholder { color: $color; font-style: $input-style-placeholder; }
}


@mixin clean() { 
  margin: 0; 
  padding: 0; 
  border: 0;
  list-style-type: none; 
  li { 
    margin: 0; 
    padding: 0; 
    list-style-type: none; 
  }
}

@mixin inlinelist($dir:false) { 
  @include clean;
  @if $dir { text-align: $dir; }
  > li {
    display: inline-block;
    @if $dir == 'left' { margin-right: 1.5em; }
    @if $dir == 'right' { margin-left: 1.5em; }
    @if $dir == 'center' { margin-right: .75em; margin-left: .75em; }
    > a { display: block; }
  }
}

@mixin typography(){
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-smoothing: grayscale;
}

@mixin smallcaps() { 
  font-size: 10px;
  text-transform: uppercase;
  letter-spacing: .1em;
  color: $light;
  font-weight: bold;
  font-style: normal;
}


@mixin ellipsis(){
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}


@mixin check(){
  content: '';
  display: inline-block;
  border: 2px solid;
  border-top-width: 0;
  border-right-width: 0;
  height: 6px;
  width: 12px;
  @include transform(rotate(-45deg));
  margin: -6px .75em 0 0;
  vertical-align: middle;
}
